/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_acaralist = require('./acaralist'); /* istanbul ignore next */var _acaralist2 = _interopRequireDefault(_acaralist);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

Acara = function (_Component) {_inherits(Acara, _Component);function Acara() {_classCallCheck(this, Acara);return _possibleConstructorReturn(this, (Acara.__proto__ || Object.getPrototypeOf(Acara)).apply(this, arguments));}_createClass(Acara, [{ key: 'style', value: function style()
    {
      return {
        table: {
          marginBottom: '0px' },

        row: {
          height: '50px' },

        title: {
          width: '100%' },

        waktu: {
          width: '100px',
          paddingLeft: '10px',
          paddingTop: '1.5%' },

        caption: {
          width: '100%' } };


    } }, { key: 'render', value: function render()
    {
      var style = this.style();
      return (
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'container-fluid nav-section-item section-acara' },
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'row' },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'col-sm-12 section-acara-title' },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'label-title' },
                this.props.title)),


            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_acaralist2.default, /* istanbul ignore next */{ lists: this.props.lists }),
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'col-xs-12 col-fit' },
              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'table-responsive view-collapse' },
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'table', /* istanbul ignore next */{ className: 'table table-hover', style: style.table },
                  /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'tbody', /* istanbul ignore next */null,
                    this.props.lists.map(function (list, key) {
                      return (
                        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'tr', /* istanbul ignore next */{ key: key, className: 'section-acara-list acara-list-item', style: style.row },
                          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'td', /* istanbul ignore next */{ className: 'acara-waktu', style: style.waktu }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'list-sub-title' }, list[1])),
                          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'td', /* istanbul ignore next */null,
                            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'ul', /* istanbul ignore next */{ className: 'list-unstyled' },
                              /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'li', /* istanbul ignore next */{ className: 'acara-title', style: function () {if (list[2].length === 0) {return { transform: 'translateY(5px)' };}}() }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'span', /* istanbul ignore next */{ className: 'list-title' }, list[0]))))));












                    }))))))));







    } }]);return Acara;}(_react.Component); /* istanbul ignore next */exports.default =


Acara;

// <ul className="list-unstyled">
//   <li className="acara-title"><span className="list-title">{list[0]}</span></li>
//   <li className="acara-waktu"><span className="list-sub-title">{list[1]}</span></li>
//   <li className="acara-caption"><span className="list-caption">{list[2]}</span></li>
// </ul>